using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace Cages
{
    public partial class DbLotData : Form
    {
        public DbLotData()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            //Cages.App_Code.Model.Pzastrabajo dbContext = new Cages.App_Code.Model.Pzastrabajo();
            //// Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            //dbContext.DBPztrabajo.LoadAsync().ContinueWith(loadTask =>
            //{
            //    // Bind data to control when loading complete
            //    gridControl1.DataSource = dbContext.DBPztrabajo.Local.ToBindingList();
            //}, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            //This line of code is generated by Data Source Configuration Wizard
            entityServerModeSource1.QueryableSource = new Cages.App_Code.Model.Pzastrabajo().DBPztrabajo;
            ////This line of code is generated by Data Source Configuration Wizard
            //this.entityInstantFeedbackSource1.GetQueryable += entityInstantFeedbackSource1_GetQueryable;
            //// This line of code is generated by Data Source Configuration Wizard
            //this.entityInstantFeedbackSource1.DismissQueryable += entityInstantFeedbackSource1_DismissQueryable;
            //// This line of code is generated by Data Source Configuration Wizard
            //this.pLinqInstantFeedbackSource1.GetEnumerable += pLinqInstantFeedbackSource1_GetEnumerable;
            //// This line of code is generated by Data Source Configuration Wizard
            //this.pLinqInstantFeedbackSource1.DismissEnumerable += pLinqInstantFeedbackSource1_DismissEnumerable;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            Cages.App_Code.Model.Pzastrabajo dataContext = new Cages.App_Code.Model.Pzastrabajo();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.DBPztrabajo;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((Cages.App_Code.Model.Pzastrabajo)e.Tag).Dispose();
        }

        // This event is generated by Data Source Configuration Wizard
        void pLinqInstantFeedbackSource1_GetEnumerable(object sender, DevExpress.Data.PLinq.GetEnumerableEventArgs e)
        {

            // Instantiate a new DataContext
            Cages.App_Code.Model.Pzastrabajo dataContext = new Cages.App_Code.Model.Pzastrabajo();
            // Assign a queryable source to the PLinqInstantFeedbackSource
            e.Source = dataContext.DBPztrabajo;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissEnumerable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void pLinqInstantFeedbackSource1_DismissEnumerable(object sender, DevExpress.Data.PLinq.GetEnumerableEventArgs e)
        {

            // Dispose of the DataContext
            ((Cages.App_Code.Model.Pzastrabajo)e.Tag).Dispose();
        }
    }
}

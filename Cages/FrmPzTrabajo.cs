using Cages.App_Code.Model;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Cages
{
    public partial class FrmPzTrabajo : Form
    {
        public FrmPzTrabajo()
        {
            InitializeComponent();



            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.GetQueryable += entityInstantFeedbackSource1_GetQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource1.DismissQueryable += entityInstantFeedbackSource1_DismissQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource2.GetQueryable += entityInstantFeedbackSource2_GetQueryable;
            // This line of code is generated by Data Source Configuration Wizard
            this.entityInstantFeedbackSource2.DismissQueryable += entityInstantFeedbackSource2_DismissQueryable;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            Cages.App_Code.Model.Pzastrabajo dataContext = new Cages.App_Code.Model.Pzastrabajo();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.DBLNPLANIF;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource1_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((Cages.App_Code.Model.Pzastrabajo)e.Tag).Dispose();
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource2_GetQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Instantiate a new DataContext
            Cages.App_Code.Model.Pzastrabajo dataContext = new Cages.App_Code.Model.Pzastrabajo();
            // Assign a queryable source to the EntityInstantFeedbackSource
            e.QueryableSource = dataContext.DBPztrabajo;
            // Assign the DataContext to the Tag property,
            // to dispose of it in the DismissQueryable event handler
            e.Tag = dataContext;
        }

        // This event is generated by Data Source Configuration Wizard
        void entityInstantFeedbackSource2_DismissQueryable(object sender, DevExpress.Data.Linq.GetQueryableEventArgs e)
        {

            // Dispose of the DataContext
            ((Cages.App_Code.Model.Pzastrabajo)e.Tag).Dispose();
        }

        private void gridView2_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            //string value = (sender as GridView).GetFocusedRowCellValue("ID");
            string value=gridView2.GetFocusedRowCellValue("CODIGO").ToString();
            //DataRowView rowa = gridView2.GetFocusedRow() as DataRowView;
            GridView view = sender as GridView;
            if (view == null) return;
            //if (e.RowHandle >= 0)
            //    e.RowHeight = (int)view.GetDataRow(e.RowHandle)["RowHeight"];
            DataRow rowa= view.GetFocusedDataRow();

            value=view.GetFocusedRowCellValue("PEDIDO").ToString();
            int count = gridView2.DataRowCount;
            MessageBox.Show("Pe: "+value+"-rows; "+count);
            //gridControl1.DataSource = null;
            //gridView1.Columns.Clear();

            //gridView1.SetFocusedRowCellValue("PEDIDO", value);

            //gridView1.FindFilterText = value+"";
            count=gridView1.DataRowCount;
            MessageBox.Show(count+"");

        }

        private void gridControl2_Click(object sender, EventArgs e)
        {
            //gridControl2.
        }
    }
}
